        - ### Functions that delegate simple tasks to the underlying data
        - 
        - ## Basic vector operations
        - 
        - ### Operations on, and return, GenomicPostions
        - for op in [:similar, :copy, :unique]
        4     @eval (Base.$op)(x::GenomicPositions) = GenomicPositions(($op)(_genostarts(x)), chr_info(x))
        1     @eval (Base.$op)(x::GenomicRanges) = GenomicRanges(($op)(_genostarts(x)), ($op)(_genoends(x)), chr_info(x))
        - end
        - 
        - ### Operations that operate directly on the internal genopos, not mutating
        - for op in [:size, :length, :endof]
       70     @eval (Base.$op)(x::GenomicPositions) = ($op)(x.genopos)
      120     @eval (Base.$op)(x::GenomicRanges) = ($op)(x.starts)
        - end
        - 
        - ### Operations that work on two GenomicPositions and return something else
        - for op in [:issubset] # max, min, etc. would go here if I decide that they make sense
        -     @eval begin
        -         function (Base.$op)(x::GenomicPositions, y::GenomicPositions)
        2             same_genome(x, y) || throw(ArgumentError("Both GenomicPositions must be from the same genome."))
        4             ($op)(x.genopos, y.genopos)
        -         end
        -     end
        - end
        - 
        - ### Operations that work on two GenomicPositions and return a single one
        - for op in [:vcat, :union, :intersect, :setdiff, :symdiff]
        -     @eval begin
        -         function (Base.$op)(x::GenomicPositions, y::GenomicPositions)
        7             same_genome(x, y) || throw(ArgumentError("Both GenomicPositions must be from the same genome."))
       14             GenomicPositions( ($op)(x.genopos, y.genopos), chr_info(x) )
        -         end
        -     end
        - end
        - 
        - ### Operations that work on two GenomicPositions and mutate the first one
        - for op in [:append!, :prepend!]
        -     @eval begin
        -         function (Base.$op)(x::GenomicPositions, y::GenomicPositions)
        2             same_genome(x, y) || throw(ArgumentError("Both GenomicPositions must be from the same genome."))
        4             ($op)(x.genopos, y.genopos)
        4             x
        -         end
        -         function (Base.$op)(x::GenomicRanges, y::GenomicRanges)
        2             same_genome(x, y) || throw(ArgumentError("Both GenomicRanges must be from the same genome."))
        4             ($op)(x.starts, y.starts)
        4             ($op)(x.ends, y.ends)
        4             ($op)(x.strands, y.strands)
        4             x
        -         end
        -     end
        - end
        - 
        - ### Do I want to put these in any of the above?
        - ### maximum, maximum!, minimum, minimum!, extrema, findmax, findmin, maxabs, maxabs!, minabs, minabs!, sum, count, foreach, map, etc.
        - ### filter(function, x::GenomicPositions, filter!(function, x::GenomicPositions)
        - ### push!, pop!
        - ### resize!, splice!, deleteat!, insert!, shift!, unshift!, pop!, push!, intersect!, setdiff!
        - 
        - 
